---
import Header from "../../components/Header.astro";
import "../../styles/global.css";
import { groupPostsByYear } from "../../scripts/posts";

const allPosts = await Astro.glob("../posts/*.md");

const categories = [
    ...new Set(allPosts.map((post) => post.frontmatter.category).flat()),
];

export async function getStaticPaths() {
    const allPosts = await Astro.glob("../posts/*.md");

    return [
        { params: { category: "생각" }, props: { posts: allPosts } },
        { params: { category: "개발" }, props: { posts: allPosts } },
    ];
}

const { category } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter(
    (post) => post.frontmatter.category === Astro.params.category,
);
const groupedPosts = groupPostsByYear(filteredPosts);
---

<!doctype html>
<html lang="ko">
    <Header pageTitle={category} description={`${category} 카테고리의 블로그 포스트 목록입니다.`} />
    <body>
        <div class="max-w-screen-sm mx-auto min-h-screen px-4 sm:px-0 pb-20">
            <div class="flex justify-between pt-16 sm:pt-32 mb-12 sm:mb-20">
                <h1 class="text-xl font-bold font-sans">{category}</h1>
                <div class="flex gap-4">
                    <a class="text-gray-400 font-serif" href="/">About</a>
                    <a class="text-gray-400 font-serif" href="/posts">Posts</a>
                </div>
            </div>
            <div class="font-serif">
                {
                    Object.keys(groupedPosts)
                        .sort((a, b) => b - a)
                        .map((year) => (
                            <div class="flex flex-col sm:flex-row border-solid pt-6 sm:pt-8">
                                <h2 class="text-gray-400 text-sm sm:w-20 flex-shrink-0 mb-2 sm:mb-0">{year}</h2>
                                <ul class="flex-grow min-w-0">
                                    {groupedPosts[year].map((post, index) => {
                                        const isFirst = index === 0;
                                        return <li class={`${isFirst ? 'flex flex-col sm:flex-row sm:justify-between' : 'flex flex-col sm:flex-row sm:justify-between pt-6 sm:pt-8'} min-w-0`}>
                                            <a href={post.url} class="break-words hover:bg-gray-100 hover:text-gray-900 transition-colors duration-200 rounded px-1 -mx-1 mb-1 sm:mb-0 sm:mr-4">
                                                {post.frontmatter.title}
                                            </a>
                                            <p class="text-gray-400 text-xs sm:text-sm shrink-0 ml-1 sm:ml-0">
                                                {post.frontmatter.pubDate.slice(
                                                    5,
                                                    10,
                                                )}
                                            </p>
                                        </li>
                                    })}
                                </ul>
                            </div>
                        ))
                }
            </div>
        </div>
    </body>
</html>
